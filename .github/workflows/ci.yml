name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php:
          - '7.4'
          - '8.0'
        kubernetes:
          - '1.19.10'
          - '1.20.6'
          - '1.21.0'
        laravel:
          # - 7.*
          - 8.*
        prefer:
          - 'prefer-lowest'
          - 'prefer-stable'
        include:
          # - laravel: 7.*
          #   testbench: 5.*
          - laravel: 8.*
            testbench: 6.*

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} - K8s v${{ matrix.kubernetes }} --${{ matrix.prefer }}

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, yaml
        coverage: pcov

    - uses: actions/cache@v2.1.5
      name: Cache dependencies
      with:
        path: ~/.composer/cache/files
        key: composer-php-${{ matrix.php }}-${{ matrix.laravel }}-${{ matrix.prefer }}-${{ hashFiles('composer.json') }}

    - uses: manusa/actions-setup-minikube@v2.4.0
      name: Setup Minikube
      with:
        minikube version: v1.17.0
        kubernetes version: "v${{ matrix.kubernetes }}"
        github token: "${{ secrets.GITHUB_TOKEN }}"

    - name: Run Kubernetes Proxy
      run: |
        kubectl proxy --port=8080 --reject-paths="^/non-existent-path" &

    - name: Install dependencies
      run: |
        composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
        composer update --${{ matrix.prefer }} --prefer-dist --no-interaction --no-suggest

    - name: Setup in-cluster config
      run: |
        sudo mkdir -p /var/run/secrets/kubernetes.io/serviceaccount
        echo "some-token" | sudo tee /var/run/secrets/kubernetes.io/serviceaccount/token
        echo "c29tZS1jZXJ0Cg==" | sudo tee /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        echo "some-namespace" | sudo tee /var/run/secrets/kubernetes.io/serviceaccount/namespace
        sudo chmod -R 777 /var/run/secrets/kubernetes.io/serviceaccount/

    - name: Run tests
      run: |
        vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

    - uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: false
