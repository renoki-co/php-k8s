name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.0', '7.1', '7.2', '7.3', '7.4']
        kubernetes: ['1.14.10', '1.15.11', '1.16.9', '1.17.5', '1.18.2']
    name: PHP ${{ matrix.php }} with Kubernetes v${{ matrix.kubernetes }}
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      name: Cache dependencies
      with:
        path: ~/.composer/cache/files
        key: composer-php-${{ matrix.php }}-${{ hashFiles('composer.json') }}
    - name: Install Minikube binary
      run: |
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        chmod +x minikube
    - name: Install Kubectl binary
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
        chmod +x kubectl
    - name: Starting Kubernetes v{{ matrix.kubernetes }}
      run: |
        ./minikube start --kubernetes-version v{{ matrix.kubernetes }}
    - name: Run Kubernetes Proxy
      run: |
        ./kubectl proxy --port=8080 &
    - name: Install dependencies
      run: |
        composer install --no-interaction --prefer-source
    - name: Run tests
      run: |
        phpunit --coverage-text --coverage-clover=coverage.xml
    - uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: false
